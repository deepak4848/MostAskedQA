Q1)Deadlock & Transection
Q2)Abstarct interface
Q3)Extension Method
Q4)Roles and Responsibility
->Design, create and maintain applications using the .NET
->designing, coding, testing, and deploying software applications
->Problem Solving,Documentation,Version Control,Deployment and Support
Q5)Facing Challange
->Time Management:Prioritize tasks based on their importance and deadlines
->Testing and Quality Assurance
->Stay Calm Under Pressure
->Documentation: Maintain clear and concise documentation for your code and projects
<---==============================================-->
Core C# and .NET Framework Questions:
What is the difference between struct and class in C#?
Explain the concept of delegates and events in C#.
What are the different types of inheritance in C#?
What is the purpose of the using statement in C#?
What is LINQ (Language Integrated Query) and how is it useful?
Explain the difference between IEnumerable and IQueryable.
What are asynchronous programming and async/await keywords in C#?
How does garbage collection work in .NET?
What are extension methods in C#? Provide an example.
Explain the concept of interfaces and when you would use them.
----------------------------------
ASP.NET Questions:
What is ASP.NET MVC and how does it differ from Web Forms?
Explain the ASP.NET Page Life Cycle.
What are Razor Views in ASP.NET MVC?
What is the role of a Controller in ASP.NET MVC?
What are Action Filters in ASP.NET MVC? Give examples of their usage.
What is ASP.NET Core and how does it differ from ASP.NET Framework?
Explain the use of Dependency Injection (DI) in ASP.NET Core.
What are the different types of ActionResult in ASP.NET MVC?
How do you handle routing in ASP.NET MVC?
What is the purpose of TempData in ASP.NET MVC?
--------------------------------------
SQL Server and Database Questions:
What is the difference between DELETE and TRUNCATE statements in SQL?
Explain the concept of ACID properties in database transactions.
What are indexes in SQL Server and why are they important?
What is a stored procedure and why would you use it?
What is the difference between inner join and outer join?
What is normalization and denormalization in database design?
How do you optimize SQL queries for better performance?
Explain the purpose of primary key and foreign key constraints in a database.
What is the role of the HAVING clause in SQL?
--------------------------------------------------
How do you handle database transactions in C# using ADO.NET or Entity Framework?
General Software Development and Problem-Solving Questions:
Describe the software development lifecycle (SDLC) and its phases.
How do you handle exceptions and error logging in your applications?
Explain the concept of SOLID principles in object-oriented programming.
How do you manage source code version control using Git or TFS?
Describe a challenging problem you faced during development and how you solved it.
What are unit testing and integration testing? How do you implement them in your projects?
How do you keep yourself updated with the latest technologies and trends in the .NET ecosystem?
============------------------------Nandlal SQL------------------=================

DataBase Name => colleage

CREATE DATABASE colleage
CREATE TABLE Employee(EmpId int not null identity(1,1), EmpName varchar(100), salary int)

INSERT INTO Employee(EmpName, salary) values ('ram', 5000)
INSERT INTO Employee(EmpName, salary) values ('ram1', 6000)
INSERT INTO Employee(EmpName, salary) values ('ram2', 7000)
INSERT INTO Employee(EmpName, salary) values ('ram3', 8000)
INSERT INTO Employee(EmpName, salary) values ('ram4', 9000)

Select * from Employee
SELECT MAX(salary) from Employee where salary < (select max(salary) from Employee)

SELECT * from Employee as t1 where 2 = (select count(*) from Employee t2 where t1.salary <= t2.salary)

select top 1 * from 
(SELECT top 4 * FROM Employee order by salary desc) as temp order by salary


select *, ROW_NUMBER() over(partition by salary ORDER by salary) as rnum from Employee

select * from 
(select *, ROW_NUMBER() over(ORDER by salary DESC) as rnum from Employee)as temp
where rnum = 2

---Cumulative sum----
-----Alternative row find even row------------
select * from Employee where EmpId % 2 = 0

-----Alternative row find odd row------------
select * from Employee where EmpId % 2 = 1

---Cumulative sum salary----
SELECT e1.EmpId,
       e1.Salary,
	   e1.EmpName,
       (SELECT SUM(e2.Salary)
        FROM Employee e2
        WHERE e2.EmpId <= e1.EmpId) AS CumulativeSalary
FROM Employee e1;

---self join-------
SELECT A1.EmpId, A1.EmpName, A1.salary FROM Employee as A1,
Employee as A2 where A1.EmpId = A2.EmpId

===============Sql Interview Question==================
1.Indexes. {Cluster index ->(multiple column apply same cluster index is called composite index), Non-cluster index}.
2.Transaction.
3.Constraints.
4. Store procedure optimization.

Trigger-Special type of store procedure use to track deleted record or information(DML,DDL)

View-Virtual table data not store in database(to improve performance,hide actual table information)

Where,GroupBy,Having-where used for filter data on condition,GroupBy use for take value in group used by aggerigate function having clause contain aggregate function with group by
SubQuery is Query with in Query

Delete(DML)-Used to delete on or more record with condition but not delete schema(tbl structure) delete from employee where id=2,roll back

Truncate(DDL)-used to delete all record,not used where condition,not delete schema(tbl structure) truncate table employee,not roll back

Drop(DDL)-used to delete all record,delete schema(tbl structure) drop table employee,not roll back

StoreProcedure-return or not return value,sp have i/p & o/p both parameter,call sp inside function,try catch ex in sp

Function-must return value,F have only i/p parameter,not call sp inside function,try catch ex not in Funct

CTE-Common Table Expression is an expression that returns a temporary result set.Reference with in SELECT,INSERT,UPDATE,DELETE

Nth Higest Salary-select distinct Top(N) salary from employee order by salary desc-->select top(1) salary from (select distinct Top(N) salary from employee order by salary desc)result order by salary

Question => How many type of Table In Sql.
Answer => Temporary table, Magic Table, Variable Table, Imaginary Table.

Variable table => A table variable is a SQL Server data type used to store temporary data which is similar to a temporary table.

Variable Table Example => create procedure test
                          as begin
                          DECLARE @WeekDays TABLE (Number INT, Day VARCHAR(40), Name VARCHAR(40))  
                          INSERT INTO @WeekDays
                          VALUES
                          (1, 'Mon', 'Monday'),
                          (2, 'Tue', 'Tuesday'),
                          (3, 'Wed', 'Wednesday'),
                          (4, 'Thu', 'Thursday'),
                          (5, 'Fri', 'Friday'),
                          (6, 'Sat', 'Saturday'),
                          (7, 'Sun', 'Sunday')
                         SELECT * FROM @WeekDays;
                         end

1 => Find nth Highest salary without inner Query.
2 => Find emp count leave in same city
3 => Find left join but find only does not match right table data.
4 => Find all duplicate record.
5 => delete all duplicate record.


Question => Find emp count leave in same city
Answer => select count(course), course from Fee group by course


Question => Find nth Highest salary without inner Query.
Answer =>     select MAX(amount_paid) as aaa from Fee where amount_paid < (select MAX(amount_paid) from Fee)
             
			  SELECT * from Fee as t1 where 2 = (select count(*) from Fee as t2 where t1.amount_paid <= t2.amount_paid)

              with cte_first as
              (
              select *, ROW_NUMBER() OVER(ORDER BY amount_paid desc) as rank from Fee
              )
              select * from cte_first where rank = 2 

Question => Find left join but find only does not match right table data.
 
Answer => select emp_no,emp.name, emp.sal,emp.age from emp left join Student
          on Student.id = emp.emp_no
          where Student.id is null	

Question => Find all duplicate record.

with cte_1 as
(
select *, ROW_NUMBER() OVER(partition by name order by name ) as rank_number from First_duplicate
)
select * from cte_1 where rank_number > 1	

Question => Delete All duplicate record 
Answer =>  with cte_1 as
           (
           select *, ROW_NUMBER() OVER(partition by name order by name ) as rank_number from First_duplicate
           )
           delete from cte_1 where rank_number > 1
		  

